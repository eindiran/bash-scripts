#!/bin/bash
# currenttime
# Print the current time converted to the 12-hour clock.
# Author: <eindiran@promptu.com>

OZ=false
DATE=false
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        --help|-h)
            # Print usage info when a help flag is used
            printf "\nUsage:\tcurrenttime [--oz]\n\tcurrenttime --help || currenttime -h\n\n"
            printf "Args:\tnone: Return the local time\n\t--oz: Return time in Queensland\n"
            printf "\t--help || -h: Print this message and exit\n\n"
            exit 0
            ;;
        --oz)
            # Set OZ to true if the --oz flag is found
            OZ=true
            ;;
        --date|-d)
            # Set DATE to true if either the --date or the -d flags are found
            DATE=true
            ;;
        *)
            # Unkown option
            printf "Unknown Option: \"%s\"\n" "$key"
            ;;
    esac
    shift
done

C_DATE=''
if [ $OZ = true ] ; then
    # Set timezone to Queensland's if OZ is true
    C_TIME=$(TZ=Australia/Queensland date)
    if [ $DATE = true ] ; then
        C_DATE=$(TZ=Australia/Queensland date -I)
    fi
else
    C_TIME=$(date)
    if [ $DATE = true ] ; then
        C_DATE=$(date -I)
    fi
fi

# Format the time and date in a pleasing way, using a ugly one-liner
echo $C_TIME | awk {'print $4'} | awk -F':' {'if($1 > 12) {printf "%s:%s:%s PM\t", $1-12, $2, $3} else if($1 == 12) {printf "12:%s:%s PM\t", $2, $3} else {printf "%s:%s:%s AM\t", $1, $2, $3}; print "'$C_DATE'"'}
